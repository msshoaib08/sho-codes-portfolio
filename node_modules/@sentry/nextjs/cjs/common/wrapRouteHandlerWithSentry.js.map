{"version":3,"file":"wrapRouteHandlerWithSentry.js","sources":["../../../src/common/wrapRouteHandlerWithSentry.ts"],"sourcesContent":["import {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  SPAN_STATUS_ERROR,\n  captureException,\n  handleCallbackErrors,\n  setHttpStatus,\n  startSpan,\n  withIsolationScope,\n  withScope,\n} from '@sentry/core';\nimport { propagationContextFromHeaders, winterCGHeadersToDict } from '@sentry/utils';\nimport { isNotFoundNavigationError, isRedirectNavigationError } from './nextNavigationErrorUtils';\nimport type { RouteHandlerContext } from './types';\nimport { platformSupportsStreaming } from './utils/platformSupportsStreaming';\nimport { flushQueue } from './utils/responseEnd';\nimport {\n  commonObjectToIsolationScope,\n  commonObjectToPropagationContext,\n  escapeNextjsTracing,\n} from './utils/tracingUtils';\n\n/**\n * Wraps a Next.js route handler with performance and error instrumentation.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function wrapRouteHandlerWithSentry<F extends (...args: any[]) => any>(\n  routeHandler: F,\n  context: RouteHandlerContext,\n): (...args: Parameters<F>) => ReturnType<F> extends Promise<unknown> ? ReturnType<F> : Promise<ReturnType<F>> {\n  const { method, parameterizedRoute, headers } = context;\n\n  return new Proxy(routeHandler, {\n    apply: (originalFunction, thisArg, args) => {\n      return escapeNextjsTracing(() => {\n        const isolationScope = commonObjectToIsolationScope(headers);\n\n        const completeHeadersDict: Record<string, string> = headers ? winterCGHeadersToDict(headers) : {};\n\n        isolationScope.setSDKProcessingMetadata({\n          request: {\n            headers: completeHeadersDict,\n          },\n        });\n\n        const incomingPropagationContext = propagationContextFromHeaders(\n          completeHeadersDict['sentry-trace'],\n          completeHeadersDict['baggage'],\n        );\n\n        const propagationContext = commonObjectToPropagationContext(headers, incomingPropagationContext);\n\n        return withIsolationScope(isolationScope, () => {\n          return withScope(async scope => {\n            scope.setTransactionName(`${method} ${parameterizedRoute}`);\n            scope.setPropagationContext(propagationContext);\n            try {\n              return startSpan(\n                {\n                  name: `${method} ${parameterizedRoute}`,\n                  attributes: {\n                    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'route',\n                    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'http.server',\n                    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.function.nextjs',\n                  },\n                  forceTransaction: true,\n                },\n                async span => {\n                  const response: Response = await handleCallbackErrors(\n                    () => originalFunction.apply(thisArg, args),\n                    error => {\n                      // Next.js throws errors when calling `redirect()`. We don't wanna report these.\n                      if (isRedirectNavigationError(error)) {\n                        // Don't do anything\n                      } else if (isNotFoundNavigationError(error) && span) {\n                        span.setStatus({ code: SPAN_STATUS_ERROR, message: 'not_found' });\n                      } else {\n                        captureException(error, {\n                          mechanism: {\n                            handled: false,\n                          },\n                        });\n                      }\n                    },\n                  );\n\n                  try {\n                    if (span && response.status) {\n                      setHttpStatus(span, response.status);\n                    }\n                  } catch {\n                    // best effort - response may be undefined?\n                  }\n\n                  return response;\n                },\n              );\n            } finally {\n              if (!platformSupportsStreaming() || process.env.NEXT_RUNTIME === 'edge') {\n                // 1. Edge transport requires manual flushing\n                // 2. Lambdas require manual flushing to prevent execution freeze before the event is sent\n                await flushQueue();\n              }\n            }\n          });\n        });\n      });\n    },\n  });\n}\n"],"names":["escapeNextjsTracing","commonObjectToIsolationScope","winterCGHeadersToDict","propagationContextFromHeaders","commonObjectToPropagationContext","withIsolationScope","withScope","startSpan","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","SEMANTIC_ATTRIBUTE_SENTRY_OP","SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN","handleCallbackErrors","isRedirectNavigationError","isNotFoundNavigationError","SPAN_STATUS_ERROR","captureException","setHttpStatus","platformSupportsStreaming","flushQueue"],"mappings":"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"}